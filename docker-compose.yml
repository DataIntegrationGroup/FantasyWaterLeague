version: "3.3"
services:

  frontend:
    build:
      context: ./frontendreact
      dockerfile: ./Dockerfile_prod
    volumes:
     - ./frontendreact:/frontend
    ports:
      - 80:80

  scorer:
    build:
      context: ./scorer
      dockerfile: ./Dockerfile
    command: bash -c "
      while !</dev/tcp/db/5432; do sleep 1; done;
      sleep 20;
      python -m main
      "
    depends_on:
      - api
    env_file:
      - ./api/.env

  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: bash -c "
      while !</dev/tcp/db/5432; do sleep 1; done;
      uvicorn api.main:app
      --host 0.0.0.0
      --port 8080
      "
    ports:
      - "8080:8080"
    volumes:
      - ./api:/api
    depends_on:
      - db
    env_file:
      - ./api/.env
    healthcheck:
      test: curl --fail http://localhost:8080/api/v1/health || exit 1
      interval: 15s
      #      retries: 5
      #      start_period: 20s
      #      timeout: 10s

  db:
    image: postgis/postgis
    volumes:
      - postgres-data:/var/lib/postgresql
    env_file:
      - ./api/.env
    environment:
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      #      - POSTGRES_TZ=America/Denver
      # If you need to create multiple database you can add coma separated databases eg gis,data
    #      #      - ALLOW_IP_RANGE=0.0.0.0/0
    #      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
    #
    ##        - TZ=America/Denver
    ##        - PGTZ=America/Denver
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"
  ##      interval: 5s
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    #    user: postgres:postgres # Optional: see below
    volumes:
      - ./pgbackups:/backups
    #    links:
    #      - db
    #    depends_on:
    #      - db
    env_file:
      - ./api/.env.local
    environment:
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"

volumes:
  postgres-data:
  api:
