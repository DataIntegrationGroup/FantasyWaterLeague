version: "3.3"
services:
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: ./Dockerfile
#    #    command: python -m main
#    command: bash -c "
#      gunicorn frontend.main:app -b "0.0.0.0:8051" --reload
#      "
#
#    #    environment:
#    #      DASH_DEBUG: true
#    #      DASH_HOT_RELOAD: true
#    ports:
#      - "8051:8051"
#    volumes:
#      - ./frontend:/frontend
#    depends_on:
#      - api


  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: bash -c "
      alembic upgrade head;
      uvicorn api.main:app
      --host 0.0.0.0
      --port 4040
      --reload
      "
    ports:
      - "4040:4040"
    volumes:
      - ./api:/api
    depends_on:
      - db
    env_file:
      - ./api/.env.local
    healthcheck:
      test: curl --fail http://localhost:4040/api/v1/health || exit 1
      interval: 15s
      #      retries: 5
      #      start_period: 20s
      #      timeout: 10s

  db:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql
    env_file:
      - ./api/.env.local
    environment:
      - POSTGRES_TZ=America/Denver
      # If you need to create multiple database you can add coma separated databases eg gis,data
#      #      - ALLOW_IP_RANGE=0.0.0.0/0
#      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
#
##        - TZ=America/Denver
##        - PGTZ=America/Denver
    ports:
      - "54321:54321"
    restart: on-failure
    healthcheck:
      test: "exit 0"
##      interval: 5s
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    #    user: postgres:postgres # Optional: see below
    volumes:
      - ./pgbackups:/backups
    #    links:
    #      - db
#    depends_on:
#      - db
    env_file:
      - ./api/.env.local
    environment:
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"

volumes:
  postgres-data: